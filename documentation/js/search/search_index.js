var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.162,1,1.993]],["body/classes/AccessToken.html",[0,0.217,1,3.797,2,2.161,3,0.443,4,0.383,5,0.383,6,4.277,7,3.483,8,0.506,9,2.198,10,0.714,11,0.031,12,1.412,13,0.959,14,4.19,15,0.443,16,0.022,17,0.028,18,0.022]],["title/controllers/AppController.html",[19,1.465,20,1.993]],["body/controllers/AppController.html",[0,0.191,3,0.391,4,0.338,5,0.338,8,0.446,11,0.034,12,1.305,13,0.846,15,0.391,16,0.02,17,0.026,18,0.02,19,2.227,20,3.029,21,1.731,22,3.072,23,1.699,24,4.613,25,2.11,26,3.695,27,1.21,28,0.81,29,0.846,30,2.711,31,3.072,32,2.355,33,1.906,34,1.108,35,3.695]],["title/modules/AppModule.html",[36,1.336,37,1.993]],["body/modules/AppModule.html",[0,0.151,3,0.308,4,0.266,5,0.266,11,0.032,15,0.308,16,0.016,17,0.022,18,0.016,20,2.971,21,1.9,28,0.978,29,0.667,30,2.83,31,2.422,36,1.732,37,3.835,38,1.365,39,2.091,40,2.422,41,2.422,42,2.422,43,3.132,44,2.571,45,2.83,46,2.583,47,1.856,48,1.856,49,2.913,50,2.583,51,2.583,52,2.913,53,2.913,54,2.422,55,2.913,56,2.422,57,2.098,58,2.098,59,1.663,60,2.913,61,2.422,62,2.913,63,2.913,64,1.856]],["title/injectables/AppService.html",[30,1.613,65,0.716]],["body/injectables/AppService.html",[0,0.203,3,0.416,4,0.359,5,0.359,8,0.474,11,0.033,12,1.356,13,0.899,15,0.416,16,0.021,17,0.027,18,0.021,23,1.766,24,4.717,27,1.286,28,0.669,29,0.899,30,2.549,34,1.178,65,1.131,66,1.678,67,3.264,68,3.927,69,3.927,70,3.927]],["title/controllers/AuthController.html",[19,1.465,71,1.993]],["body/controllers/AuthController.html",[0,0.132,3,0.269,4,0.233,5,0.233,8,0.308,10,0.628,11,0.033,13,0.843,15,0.269,16,0.014,17,0.02,18,0.014,19,1.193,21,1.193,23,1.317,25,2.104,27,1.207,28,0.895,29,0.583,32,1.623,33,1.314,34,1.299,71,2.348,72,2.117,73,2.117,74,2.547,75,3.063,76,3.685,77,2.547,78,4.768,79,4.5,80,2.547,81,2.547,82,1.439,83,1.439,84,1.317,85,4.186,86,2.359,87,2.547,88,2.547,89,2.547,90,2.117,91,2.117,92,2.117,93,2.117,94,2.029,95,1.834,96,1.623,97,2.547,98,3.063,99,1.834,100,1.834,101,1.088,102,1.454,103,2.547,104,2.547,105,2.547,106,2.547,107,2.547,108,2.547,109,2.547,110,2.547,111,2.547,112,2.547,113,2.547,114,2.117,115,2.117,116,2.547,117,2.547,118,2.547]],["title/modules/AuthModule.html",[36,1.336,43,1.785]],["body/modules/AuthModule.html",[0,0.125,3,0.255,4,0.221,5,0.221,11,0.033,15,0.255,16,0.013,17,0.019,18,0.013,21,1.66,28,0.966,29,0.552,34,0.724,36,1.514,38,1.131,39,1.827,43,3.405,44,2.414,45,2.657,46,2.258,47,1.538,48,1.538,50,2.258,51,2.675,56,2.006,57,1.738,58,1.738,59,1.378,71,2.675,94,2.722,95,1.738,119,2.006,120,2.413,121,2.006,122,2.006,123,2.941,124,2.941,125,2.413,126,2.552,127,2.413,128,2.413,129,2.413,130,3.543,131,1.738,132,2.552,133,2.006,134,2.006,135,2.413,136,3.543,137,2.413,138,2.006,139,2.006,140,2.413,141,2.006,142,2.413,143,2.413,144,2.413,145,1.538,146,2.413]],["title/injectables/AuthService.html",[65,0.716,94,1.465]],["body/injectables/AuthService.html",[0,0.113,1,2.517,3,0.23,4,0.199,5,0.199,8,0.263,10,0.673,11,0.034,12,1.361,13,0.904,15,0.23,16,0.012,17,0.018,18,0.012,23,1.173,27,1.074,28,0.877,29,0.498,34,1.415,65,0.751,66,0.93,75,2.728,82,1.542,83,1.542,84,1.412,86,2.211,94,1.537,100,1.568,101,0.93,131,1.568,147,1.809,148,3.281,149,2.091,150,2.176,151,4.959,152,2.412,153,2.176,154,3.281,155,2.211,156,2.176,157,1.542,158,3.281,159,1.851,160,2.176,161,0.984,162,1.568,163,1.387,164,1.387,165,1.809,166,1.873,167,1.809,168,1.809,169,2.176,170,2.176,171,2.176,172,2.728,173,2.176,174,2.176,175,2.091,176,1.537,177,2.176,178,3.281,179,2.176,180,2.176,181,2.176,182,1.809,183,0.778,184,1.809,185,0.85,186,1.809,187,0.85,188,1.809,189,2.176,190,1.387,191,1.809,192,2.176,193,2.176,194,2.176]],["title/interfaces/AuthenticatedRequest.html",[195,1.465,196,1.993]],["body/interfaces/AuthenticatedRequest.html",[3,0.435,4,0.376,5,0.376,8,0.497,9,2.174,10,0.701,11,0.031,15,0.435,16,0.022,17,0.027,18,0.022,28,0.701,155,2.703,157,2.315,164,2.622,195,1.928,196,3.242,197,2.622,198,3.42,199,3.42]],["title/modules/DatabaseModule.html",[36,1.336,44,1.465]],["body/modules/DatabaseModule.html",[0,0.201,3,0.411,4,0.355,5,0.355,11,0.034,15,0.411,16,0.021,17,0.026,18,0.021,28,0.963,29,0.889,36,2.096,38,1.819,44,2.299,50,2.474,51,2.474,58,2.796,59,2.217,126,2.796,200,3.882,201,3.882,202,3.882,203,3.874,204,3.882,205,3.882]],["title/injectables/JwtAuthGuard.html",[65,0.716,102,1.785]],["body/injectables/JwtAuthGuard.html",[0,0.153,3,0.312,4,0.27,5,0.27,8,0.357,10,0.503,11,0.034,13,0.936,15,0.312,16,0.016,17,0.022,18,0.016,23,1.462,27,1.339,28,0.8,29,0.675,34,1.227,65,0.936,66,1.261,82,1.597,83,1.597,84,1.462,86,2.2,101,1.261,102,2.335,157,2.079,162,2.946,175,1.88,176,1.383,206,3.902,207,2.125,208,5.069,209,4.09,210,2.951,211,5.069,212,2.951,213,4.09,214,4.09,215,3.4,216,4.09,217,2.951,218,4.09,219,2.453,220,1.685,221,1.685,222,2.951,223,2.951]],["title/classes/JwtPayload.html",[0,0.162,166,1.785]],["body/classes/JwtPayload.html",[0,0.183,2,1.827,3,0.375,4,0.324,5,0.324,8,0.428,9,1.976,10,0.931,11,0.032,12,1.647,13,1.25,15,0.375,16,0.019,17,0.025,18,0.019,161,1.545,166,2.641,183,1.841,185,2.011,187,2.011,224,4.709,225,2.945,226,3.543,227,3.543,228,3.543,229,3.543]],["title/injectables/JwtStrategy.html",[65,0.716,123,1.785]],["body/injectables/JwtStrategy.html",[0,0.148,3,0.302,4,0.261,5,0.261,8,0.345,10,0.681,11,0.033,13,0.914,15,0.302,16,0.015,17,0.021,18,0.015,23,1.428,27,0.934,28,0.954,29,0.653,34,0.856,59,1.629,64,1.818,65,0.914,66,1.219,82,1.56,83,1.56,84,1.428,123,2.281,132,3.598,133,2.372,134,2.372,139,3.321,141,2.372,145,1.818,149,1.818,155,2.341,161,0.856,163,1.818,164,1.818,166,2.852,167,2.372,168,2.372,183,1.02,185,1.114,187,1.114,191,2.372,220,1.629,221,1.629,230,2.372,231,3.321,232,2.853,233,2.853,234,3.995,235,2.853,236,2.372,237,2.853,238,2.372,239,2.055,240,2.372,241,2.372,242,2.853,243,2.372,244,2.853,245,2.853,246,2.853,247,2.853,248,2.853,249,2.853,250,2.853,251,2.853]],["title/injectables/LocalAuthGuard.html",[65,0.716,96,1.993]],["body/injectables/LocalAuthGuard.html",[0,0.224,3,0.457,4,0.395,5,0.395,11,0.028,15,0.457,16,0.023,17,0.028,18,0.023,28,0.894,29,0.989,65,1.2,66,1.846,96,3.341,207,3.112,219,3.592,220,2.467,221,2.467,252,3.592,253,4.321]],["title/injectables/LocalStrategy.html",[65,0.716,124,1.785]],["body/injectables/LocalStrategy.html",[0,0.144,3,0.293,4,0.254,5,0.254,8,0.335,10,0.667,11,0.033,12,1.482,13,0.896,15,0.293,16,0.015,17,0.021,18,0.015,23,1.4,27,0.908,28,0.92,29,0.635,32,1.767,33,1.43,34,0.831,65,0.896,66,1.185,82,1.529,83,1.529,84,1.4,94,2.53,95,1.997,101,1.185,124,2.236,149,1.767,155,1.299,157,1.529,159,2.438,161,1.174,162,2.82,163,1.767,164,1.767,175,1.767,176,1.299,190,1.767,215,3.255,220,1.583,221,1.583,231,3.255,236,2.305,238,2.305,239,1.997,241,2.305,243,2.305,254,2.305,255,3.774,256,2.772,257,2.772,258,3.916,259,2.772,260,2.305,261,2.772,262,2.772,263,2.772,264,2.772,265,2.772,266,2.305,267,2.772]],["title/classes/LoginDto.html",[0,0.162,268,2.252]],["body/classes/LoginDto.html",[0,0.248,2,1.927,3,0.395,4,0.342,5,0.342,8,0.451,9,2.045,10,0.816,11,0.032,12,1.529,13,1.096,15,0.395,16,0.02,17,0.026,18,0.02,25,2.733,28,0.637,159,2.475,161,1.584,268,3.447,269,3.105,270,5.571,271,3.735,272,3.735,273,3.105,274,3.105,275,2.69]],["title/classes/RegisterDto.html",[0,0.162,276,1.785]],["body/classes/RegisterDto.html",[0,0.166,2,1.088,3,0.223,4,0.193,5,0.193,8,0.255,9,1.369,10,0.793,11,0.034,12,1.504,13,1.065,15,0.223,16,0.011,17,0.017,18,0.011,25,2.657,28,0.36,33,3.005,84,1.547,159,2.459,161,1.162,183,1.385,185,1.513,187,1.513,273,2.664,274,1.754,275,1.52,276,1.83,277,1.754,278,2.11,279,2.11,280,5.374,281,2.11,282,2.11,283,2.11,284,4.654,285,3.205,286,3.205,287,3.205,288,3.205,289,3.205,290,3.205,291,2.664,292,3.205,293,3.205,294,2.11,295,2.11,296,2.11,297,2.11,298,5.093,299,2.11,300,3.205,301,3.205,302,2.11,303,2.11,304,2.11,305,2.11,306,2.11,307,2.11,308,2.11,309,2.11,310,2.11,311,2.11,312,3.875,313,2.11,314,2.11,315,2.11,316,3.205,317,2.11]],["title/interfaces/User.html",[157,1.221,195,1.465]],["body/interfaces/User.html",[3,0.233,4,0.202,5,0.202,8,0.266,9,1.415,10,0.881,11,0.033,12,1.653,13,0.505,15,0.233,16,0.012,17,0.018,18,0.012,23,1.184,27,0.722,28,0.678,33,2.447,34,0.993,64,1.405,82,0.861,83,0.861,84,0.788,86,2.074,101,0.942,157,1.554,159,2.597,161,1.423,176,1.033,183,1.696,185,1.853,187,1.853,190,2.111,195,1.033,197,1.405,221,1.891,255,1.833,266,1.833,318,1.259,319,3.98,320,3.313,321,3.313,322,2.204,323,2.754,324,2.754,325,2.204,326,2.204,327,1.833,328,3.313,329,2.204,330,1.833,331,2.386,332,2.386,333,3.944,334,1.833,335,3.308,336,1.833,337,1.833,338,2.204,339,2.204,340,2.754,341,2.204,342,2.204,343,2.204,344,2.204,345,1.588,346,1.833,347,2.204,348,2.204,349,2.204,350,2.386]],["title/controllers/UserController.html",[19,1.465,351,1.993]],["body/controllers/UserController.html",[0,0.1,3,0.205,4,0.177,5,0.177,8,0.234,10,0.512,11,0.034,13,0.687,15,0.205,16,0.01,17,0.016,18,0.01,19,0.908,21,0.908,23,1.073,25,1.714,27,0.983,28,0.87,29,0.443,32,1.235,33,0.999,34,1.343,73,1.611,78,4.534,79,4.108,82,1.172,83,1.172,84,1.073,85,3.055,86,1.722,90,1.611,91,1.611,92,1.611,93,1.611,98,1.611,99,1.395,100,1.395,101,0.828,102,1.106,114,1.611,115,1.611,152,1.722,157,1.172,161,1.343,163,1.235,165,1.611,175,2.342,176,1.722,182,1.611,183,1.601,184,1.611,185,0.757,186,1.611,187,0.757,188,1.611,190,1.235,196,2.638,276,2.363,351,1.913,352,1.611,353,3.002,354,2.496,355,1.938,356,1.938,357,1.938,358,1.611,359,3.002,360,1.938,361,3.055,362,1.938,363,1.938,364,1.611,365,1.611,366,1.938,367,1.938,368,1.938,369,2.342,370,1.938,371,1.938,372,1.938,373,1.938,374,1.938,375,1.938,376,1.938,377,3.002,378,1.938,379,1.938,380,1.938,381,1.938,382,1.938,383,1.938,384,3.002,385,3.002,386,1.938,387,1.938,388,1.938,389,1.938,390,1.938,391,1.938]],["title/modules/UserModule.html",[36,1.336,45,1.613]],["body/modules/UserModule.html",[0,0.165,3,0.337,4,0.291,5,0.291,11,0.033,15,0.337,16,0.017,17,0.023,18,0.017,21,2.018,28,0.892,29,0.728,36,1.84,38,1.491,39,2.222,44,2.641,45,3.064,46,2.745,47,2.028,48,2.028,50,2.745,51,2.745,57,2.292,126,2.292,152,2.84,351,3.112,364,2.646,392,2.646,393,3.183,394,2.646,395,2.646,396,3.183,397,3.183,398,3.183]],["title/classes/UserPrincipal.html",[0,0.162,155,1.465]],["body/classes/UserPrincipal.html",[0,0.183,2,1.827,3,0.375,4,0.324,5,0.324,8,0.428,9,1.976,10,0.931,11,0.032,12,1.647,13,1.25,15,0.375,16,0.019,17,0.025,18,0.019,155,2.168,161,1.545,183,1.841,185,2.011,187,2.011,399,4.709,400,2.945,401,3.543,402,3.543,403,3.543,404,3.543]],["title/interfaces/UserProfile.html",[195,1.465,369,1.993]],["body/interfaces/UserProfile.html",[3,0.383,4,0.331,5,0.331,8,0.437,9,2.003,10,0.938,11,0.032,12,1.709,15,0.383,16,0.019,17,0.025,18,0.019,161,1.651,183,1.968,185,2.149,187,2.149,195,1.695,197,2.305,369,2.988,405,3.007,406,3.007]],["title/injectables/UserService.html",[65,0.716,152,1.465]],["body/injectables/UserService.html",[0,0.126,3,0.258,4,0.223,5,0.223,8,0.295,10,0.843,11,0.033,12,1.534,13,1.133,15,0.258,16,0.013,17,0.019,18,0.013,23,1.276,27,1.522,28,0.843,29,0.558,34,1.394,65,0.817,66,1.042,82,1.932,83,1.932,84,1.769,86,2.618,101,1.042,145,1.554,149,1.554,152,1.673,157,0.952,161,1.071,172,2.027,183,0.872,276,2.655,331,3.724,354,2.968,358,2.968,361,2.027,365,2.027,407,2.027,408,3.57,409,3.57,410,3.57,411,2.439,412,2.439,413,3.57,414,2.439,415,3.57,416,2.439,417,3.57,418,2.439,419,2.439,420,1.756,421,2.439,422,2.439,423,2.439,424,2.439,425,2.439,426,2.439,427,2.439]],["title/coverage.html",[428,3.066]],["body/coverage.html",[0,0.248,1,1.432,5,0.206,6,1.868,7,1.868,10,0.383,11,0.033,16,0.012,17,0.018,18,0.012,19,1.887,20,1.432,22,1.868,30,1.159,65,1.191,67,1.868,71,1.432,72,1.868,94,1.053,96,1.432,102,1.283,123,1.283,124,1.283,147,1.868,152,1.053,155,1.053,157,0.878,166,1.283,176,1.053,195,1.887,196,1.432,198,1.868,199,1.868,203,1.619,206,1.868,207,2.421,224,1.868,225,1.868,230,1.868,252,1.868,254,1.868,268,1.619,269,1.868,276,1.283,277,1.868,318,2.551,332,1.619,335,3.347,345,1.619,350,1.619,351,1.432,352,1.868,369,1.432,399,1.868,400,1.868,405,1.868,406,1.868,407,1.868,420,1.619,428,1.619,429,2.247,430,2.247,431,2.247,432,6.177,433,4.468,434,5.019,435,2.247,436,5.349,437,4.026,438,2.794,439,4.468,440,1.868,441,1.868,442,2.247,443,1.868,444,1.868,445,3.361,446,2.247,447,2.247]],["title/dependencies.html",[39,1.938,448,2.617]],["body/dependencies.html",[0,0.23,11,0.034,16,0.018,17,0.024,18,0.018,29,0.764,39,1.721,54,2.774,59,1.905,99,3.203,101,1.426,131,2.403,220,1.905,239,3.602,240,2.774,260,2.774,275,2.403,327,2.774,330,2.774,449,5.334,450,3.337,451,3.337,452,4.447,453,3.337,454,3.337,455,3.337,456,3.337,457,3.337,458,3.337,459,3.337,460,3.337,461,3.337,462,3.337,463,3.337,464,3.337,465,3.337,466,3.337,467,3.337,468,3.337,469,3.337,470,3.337,471,3.337,472,3.337]],["title/miscellaneous/functions.html",[473,1.35,474,3.124]],["body/miscellaneous/functions.html",[8,0.488,11,0.032,16,0.022,17,0.027,18,0.022,27,1.323,82,1.965,83,1.965,84,1.799,86,1.894,159,1.894,318,2.308,336,3.36,340,3.36,345,3.624,346,3.36,350,3.624,443,3.36,444,4.555,473,2.085,474,3.36,475,4.042,476,3.624]],["title/index.html",[8,0.316,477,2.617,478,2.617]],["body/index.html",[4,0.271,11,0.033,16,0.016,17,0.022,18,0.016,61,3.41,291,2.464,337,4.585,428,2.134,479,2.963,480,2.963,481,4.102,482,2.963,483,2.963,484,2.963,485,2.963,486,2.963,487,2.963,488,2.963,489,4.705,490,2.963,491,2.963,492,2.963,493,2.963,494,5.654,495,2.963,496,2.963,497,2.963,498,2.963,499,2.963,500,4.102,501,2.963,502,2.963,503,2.963,504,2.963,505,4.102,506,2.963,507,2.963,508,2.963,509,4.102,510,4.102,511,2.963,512,2.963,513,2.963,514,2.963,515,2.963,516,2.464,517,2.963,518,2.963,519,2.963,520,2.963,521,2.963,522,2.963,523,2.963,524,2.963,525,2.963,526,2.963,527,2.963,528,2.963,529,2.963,530,2.963,531,2.963,532,2.963,533,2.963]],["title/modules.html",[38,1.994]],["body/modules.html",[11,0.028,16,0.023,17,0.028,18,0.023,37,2.736,38,2.012,43,2.452,44,2.012,45,2.215,516,4.679,534,5.628,535,5.628,536,5.855,537,4.294,538,4.294]],["title/overview.html",[539,3.538]],["body/overview.html",[2,1.478,11,0.033,16,0.015,17,0.022,18,0.015,21,1.342,30,2.383,37,3.749,38,1.342,39,2.067,40,2.382,41,2.382,42,2.382,43,3.475,44,2.468,45,2.996,46,2.553,47,1.826,48,1.826,66,1.224,94,2.625,119,2.382,121,2.382,122,2.382,123,2.638,124,2.638,152,2.625,197,1.826,392,2.382,394,2.382,395,2.382,539,2.382,540,2.865,541,4.007,542,2.865,543,2.865]],["title/miscellaneous/typealiases.html",[473,1.35,544,3.758]],["body/miscellaneous/typealiases.html",[8,0.557,10,0.786,11,0.029,16,0.025,17,0.029,18,0.025,318,2.632,323,3.833,331,3.925,473,2.378,476,3.321,545,4.61]],["title/miscellaneous/variables.html",[473,1.35,546,3.124]],["body/miscellaneous/variables.html",[8,0.351,10,0.793,11,0.034,12,1.109,16,0.016,17,0.022,18,0.016,34,1.212,64,2.964,132,2.089,138,3.36,145,2.576,159,1.359,161,0.87,176,1.359,183,1.037,185,1.133,187,1.133,203,2.911,318,1.656,324,2.412,332,3.35,333,4.398,334,2.412,420,3.624,438,2.412,440,4.183,441,2.412,473,1.496,476,2.089,546,2.412,547,4.042,548,2.901,549,5.032,550,5.032,551,2.901,552,4.042,553,2.901,554,4.042,555,2.901,556,2.901,557,2.901,558,2.901,559,2.901,560,2.901,561,2.901]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":342,"title":{},"body":{"interfaces/User.html":{}}}],["20",{"_index":292,"title":{},"body":{"classes/RegisterDto.html":{}}}],["3",{"_index":541,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":540,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":543,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["5.0.9",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["5.13.7",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":542,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":287,"title":{},"body":{"classes/RegisterDto.html":{}}}],["8.0.0",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":301,"title":{},"body":{"classes/RegisterDto.html":{}}}],["9!#$%&'*+\\/=?^_",{"_index":299,"title":{},"body":{"classes/RegisterDto.html":{}}}],["9]([a",{"_index":300,"title":{},"body":{"classes/RegisterDto.html":{}}}],["9])?(\\.[a",{"_index":302,"title":{},"body":{"classes/RegisterDto.html":{}}}],["9])?)*$/i",{"_index":303,"title":{},"body":{"classes/RegisterDto.html":{}}}],["9a",{"_index":308,"title":{},"body":{"classes/RegisterDto.html":{}}}],["accept",{"_index":290,"title":{},"body":{"classes/RegisterDto.html":{}}}],["access_token",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["aliases",{"_index":545,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":517,"title":{},"body":{"index.html":{}}}],["app",{"_index":496,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":20,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":487,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":30,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":255,"title":{},"body":{"injectables/LocalStrategy.html":{},"interfaces/User.html":{}}}],["auth",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":207,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":217,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":212,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/jwt",{"_index":366,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/interface/authenticated",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":71,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticatedrequest",{"_index":196,"title":{"interfaces/AuthenticatedRequest.html":{}},"body":{"interfaces/AuthenticatedRequest.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["authguard",{"_index":219,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":222,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":253,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":526,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":94,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":538,"title":{},"body":{"modules.html":{}}}],["await",{"_index":266,"title":{},"body":{"injectables/LocalStrategy.html":{},"interfaces/User.html":{}}}],["backers",{"_index":518,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":330,"title":{},"body":{"interfaces/User.html":{},"dependencies.html":{}}}],["bearer",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bootstrap",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":534,"title":{},"body":{"modules.html":{}}}],["building",{"_index":482,"title":{},"body":{"index.html":{}}}],["can't",{"_index":289,"title":{},"body":{"classes/RegisterDto.html":{}}}],["canactivate",{"_index":208,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":210,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["char",{"_index":316,"title":{},"body":{"classes/RegisterDto.html":{}}}],["characters",{"_index":293,"title":{},"body":{"classes/RegisterDto.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UserPrincipal.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UserPrincipal.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":392,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":394,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":393,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":395,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compare",{"_index":329,"title":{},"body":{"interfaces/User.html":{}}}],["comparepassword",{"_index":320,"title":{},"body":{"interfaces/User.html":{}}}],["comparepassword(password",{"_index":321,"title":{},"body":{"interfaces/User.html":{}}}],["comparepasswordmethod",{"_index":350,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparepasswordmethod(password",{"_index":346,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["config",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["config.expiresin",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.secretkey",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["config/jwtconfig.config",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["config/mongodb.config",{"_index":202,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule.forfeature(mongodbconfig",{"_index":205,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":362,"title":{},"body":{"controllers/UserController.html":{}}}],["conflictexception(`email",{"_index":381,"title":{},"body":{"controllers/UserController.html":{}}}],["conflictexception(`username",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["conn",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conn.model('user",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(this.authservice.validateuser(username,password",{"_index":264,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(jwtconfig.key",{"_index":242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(@inject(user_model",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":256,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":232,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["contains",{"_index":311,"title":{},"body":{"classes/RegisterDto.html":{}}}],["context",{"_index":213,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":19,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":428,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createconnection(dbconfig.uri",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":361,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["database.provider",{"_index":204,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.constants",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["database/database.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["database/model/user.model",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["database_connection",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":44,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["db_connection",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbproviders",{"_index":203,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":488,"title":{},"body":{"index.html":{}}}],["development",{"_index":497,"title":{},"body":{"index.html":{}}}],["digit",{"_index":314,"title":{},"body":{"classes/RegisterDto.html":{}}}],["document",{"_index":319,"title":{},"body":{"interfaces/User.html":{}}}],["documentation",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":506,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":483,"title":{},"body":{"index.html":{}}}],["email",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":218,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":211,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist",{"_index":377,"title":{},"body":{"controllers/UserController.html":{}}}],["existbymail",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["existbymail(email",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["existbyusername",{"_index":409,"title":{},"body":{"injectables/UserService.html":{}}}],["existbyusername(username",{"_index":415,"title":{},"body":{"injectables/UserService.html":{}}}],["expiresin",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["exports:[userservice",{"_index":398,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":221,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["finduserbyname",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyname(username",{"_index":417,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":391,"title":{},"body":{"controllers/UserController.html":{}}}],["framework",{"_index":481,"title":{},"body":{"index.html":{}}}],["from(compare(password",{"_index":347,"title":{},"body":{"interfaces/User.html":{}}}],["from(this.jwtservice.signasync(payload)).pipe",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.usermodel.create({...data",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["from(this.usermodel.exists({email",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["from(this.usermodel.exists({username",{"_index":426,"title":{},"body":{"injectables/UserService.html":{}}}],["from(this.usermodel.findone({username}).exec",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":335,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["functions",{"_index":474,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":477,"title":{"index.html":{}},"body":{}}],["graph",{"_index":537,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":513,"title":{},"body":{"index.html":{}}}],["guard/jwt",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/local",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":209,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":216,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":328,"title":{},"body":{"interfaces/User.html":{}}}],["hash(this.password",{"_index":341,"title":{},"body":{"interfaces/User.html":{}}}],["header('authorization",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":523,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":530,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["identifier",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreexpiration",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":65,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":493,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":495,"title":{},"body":{"index.html":{}}}],["interface",{"_index":195,"title":{"interfaces/AuthenticatedRequest.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{}},"body":{"interfaces/AuthenticatedRequest.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["interface/access",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["interface/jwt",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["interface/user",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["interfaces",{"_index":197,"title":{},"body":{"interfaces/AuthenticatedRequest.html":{},"interfaces/User.html":{},"interfaces/UserProfile.html":{},"overview.html":{}}}],["isemail",{"_index":273,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isemailexist",{"_index":380,"title":{},"body":{"controllers/UserController.html":{}}}],["isnotempty",{"_index":280,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":278,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty()@minlength(8",{"_index":283,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isusernameexist",{"_index":375,"title":{},"body":{"controllers/UserController.html":{}}}],["join",{"_index":520,"title":{},"body":{"index.html":{}}}],["json(token",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":102,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtconfig.key",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":244,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":166,"title":{"classes/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":123,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":527,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":261,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["lastvaluefrom(this.authservice.validateuser(username",{"_index":267,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["length",{"_index":286,"title":{},"body":{"classes/RegisterDto.html":{}}}],["license",{"_index":533,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":510,"title":{},"body":{"index.html":{}}}],["local",{"_index":260,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":96,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":124,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":268,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["lowercase",{"_index":317,"title":{},"body":{"classes/RegisterDto.html":{}}}],["m",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["map",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["map((access_token",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((token",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["map(m",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(user",{"_index":384,"title":{},"body":{"controllers/UserController.html":{}}}],["match",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["matches(/^(?=.*\\d)(?=.*[a",{"_index":305,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":297,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":296,"title":{},"body":{"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":288,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mergemap",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["mergemap((isemailexist",{"_index":379,"title":{},"body":{"controllers/UserController.html":{}}}],["mergemap(isusernameexist",{"_index":374,"title":{},"body":{"controllers/UserController.html":{}}}],["mergemap(user",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":284,"title":{},"body":{"classes/RegisterDto.html":{}}}],["metadata",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":285,"title":{},"body":{"classes/RegisterDto.html":{}}}],["minlength",{"_index":274,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(4",{"_index":270,"title":{},"body":{"classes/LoginDto.html":{}}}],["minlength(8",{"_index":304,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":473,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":509,"title":{},"body":{"index.html":{}}}],["mode",{"_index":500,"title":{},"body":{"index.html":{}}}],["model",{"_index":323,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["modified",{"_index":338,"title":{},"body":{"interfaces/User.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodbconfig",{"_index":201,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongodbconfig.key",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":327,"title":{},"body":{"interfaces/User.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost/nestjs",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":291,"title":{},"body":{"classes/RegisterDto.html":{},"index.html":{}}}],["myśliwiec",{"_index":528,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":489,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":532,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":340,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":480,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["notfoundexception('user",{"_index":390,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":494,"title":{},"body":{"index.html":{}}}],["numeric",{"_index":313,"title":{},"body":{"classes/RegisterDto.html":{}}}],["observable",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["of(res.status(httpstatus.ok).send(req.user",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["one",{"_index":312,"title":{},"body":{"classes/RegisterDto.html":{}}}],["open",{"_index":511,"title":{},"body":{"index.html":{}}}],["optional",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":539,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":448,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":236,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":241,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":263,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["payload",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.firstname",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":225,"title":{},"body":{"classes/JwtPayload.html":{},"coverage.html":{}}}],["payload.interface.ts:2",{"_index":229,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.interface.ts:3",{"_index":226,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.interface.ts:4",{"_index":227,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.interface.ts:5",{"_index":228,"title":{},"body":{"classes/JwtPayload.html":{}}}],["payload.lastname",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pipe",{"_index":383,"title":{},"body":{"controllers/UserController.html":{}}}],["please",{"_index":521,"title":{},"body":{"index.html":{}}}],["post",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/login",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/profile",{"_index":386,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/profile')@useguards(jwtauthguard",{"_index":356,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/register",{"_index":359,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/testjwt",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["presavehook",{"_index":345,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["presavehook(next",{"_index":336,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["principal",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["principal.ts",{"_index":400,"title":{},"body":{"classes/UserPrincipal.html":{},"coverage.html":{}}}],["principal.ts:2",{"_index":404,"title":{},"body":{"classes/UserPrincipal.html":{}}}],["principal.ts:3",{"_index":401,"title":{},"body":{"classes/UserPrincipal.html":{}}}],["principal.ts:4",{"_index":402,"title":{},"body":{"classes/UserPrincipal.html":{}}}],["principal.ts:5",{"_index":403,"title":{},"body":{"classes/UserPrincipal.html":{}}}],["private",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":502,"title":{},"body":{"index.html":{}}}],["profile",{"_index":353,"title":{},"body":{"controllers/UserController.html":{}}}],["profile(@req",{"_index":387,"title":{},"body":{"controllers/UserController.html":{}}}],["profile(req",{"_index":355,"title":{},"body":{"controllers/UserController.html":{}}}],["profile.interface",{"_index":370,"title":{},"body":{"controllers/UserController.html":{}}}],["profile.interface.ts",{"_index":406,"title":{},"body":{"interfaces/UserProfile.html":{},"coverage.html":{}}}],["progressive",{"_index":479,"title":{},"body":{"index.html":{}}}],["project",{"_index":512,"title":{},"body":{"index.html":{}}}],["promise",{"_index":215,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AuthenticatedRequest.html":{},"classes/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{}}}],["provide",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["read",{"_index":522,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":354,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["register(data",{"_index":358,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register.dto",{"_index":365,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registerdto",{"_index":276,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["repository",{"_index":492,"title":{},"body":{"index.html":{}}}],["req",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["request.interface",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["request.interface.ts",{"_index":199,"title":{},"body":{"interfaces/AuthenticatedRequest.html":{},"coverage.html":{}}}],["res",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["result",{"_index":16,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":337,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["rxjs",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scalable",{"_index":484,"title":{},"body":{"index.html":{}}}],["schema",{"_index":324,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["schematype",{"_index":325,"title":{},"body":{"interfaces/User.html":{}}}],["schematypes",{"_index":326,"title":{},"body":{"interfaces/User.html":{}}}],["schematypes.string",{"_index":333,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["send(userprofile",{"_index":389,"title":{},"body":{"controllers/UserController.html":{}}}],["server",{"_index":485,"title":{},"body":{"index.html":{}}}],["side",{"_index":486,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":515,"title":{},"body":{"index.html":{}}}],["src/.../database.constants.ts",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.provider.ts",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.model.ts",{"_index":476,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":269,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:5",{"_index":272,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":271,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/guard/jwt",{"_index":206,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":252,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/interface/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/interface/authenticated",{"_index":198,"title":{},"body":{"interfaces/AuthenticatedRequest.html":{},"coverage.html":{}}}],["src/auth/interface/jwt",{"_index":224,"title":{},"body":{"classes/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/interface/user",{"_index":399,"title":{},"body":{"classes/UserPrincipal.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":230,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:10",{"_index":233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:19",{"_index":235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts",{"_index":254,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local.strategy.ts:17",{"_index":259,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts:9",{"_index":257,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/database/database.constants.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":200,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.provider.ts",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/model/user.model.ts",{"_index":318,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/database/model/user.model.ts:6",{"_index":322,"title":{},"body":{"interfaces/User.html":{}}}],["src/main.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/interface/user",{"_index":405,"title":{},"body":{"interfaces/UserProfile.html":{},"coverage.html":{}}}],["src/user/register.dto.ts",{"_index":277,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/user/register.dto.ts:10",{"_index":279,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/user/register.dto.ts:18",{"_index":294,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/user/register.dto.ts:21",{"_index":281,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/user/register.dto.ts:24",{"_index":282,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/user/register.dto.ts:5",{"_index":295,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/user/user.controller.ts",{"_index":352,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:26",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:60",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":396,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":407,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:12",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:16",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":416,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:24",{"_index":414,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:8",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":498,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":501,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":503,"title":{},"body":{"index.html":{}}}],["started",{"_index":478,"title":{"index.html":{}},"body":{}}],["starter",{"_index":491,"title":{},"body":{"index.html":{}}}],["statements",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["status(httpstatus.ok",{"_index":385,"title":{},"body":{"controllers/UserController.html":{}}}],["stay",{"_index":524,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":238,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":243,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":223,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["supercase",{"_index":315,"title":{},"body":{"classes/RegisterDto.html":{}}}],["support",{"_index":516,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":535,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["test:covsupport",{"_index":508,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":507,"title":{},"body":{"index.html":{}}}],["testjwt",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["testjwt(@req",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["testjwt(req",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["tests",{"_index":505,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":514,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user).pipe",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.ismodified('password",{"_index":339,"title":{},"body":{"interfaces/User.html":{}}}],["this.password",{"_index":348,"title":{},"body":{"interfaces/User.html":{}}}],["this.set('password",{"_index":343,"title":{},"body":{"interfaces/User.html":{}}}],["this.userservice.existbymail(email).pipe",{"_index":378,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.existbyusername(username).pipe",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduserbyname(req.user.username).pipe",{"_index":388,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduserbyname(username).pipe",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.register(data",{"_index":382,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{}}}],["timestamps",{"_index":334,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["token.accesstoken",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.interface",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.interface.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.interface.ts:2",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{}}}],["touch",{"_index":525,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":531,"title":{},"body":{"index.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"injectables/JwtAuthGuard.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":544,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":490,"title":{},"body":{"index.html":{}}}],["ui",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('password",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('username",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":504,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@post('/testjwt",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('/login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":157,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.comparepassword(password).pipe",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":397,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.firstname",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.lastname",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user.service",{"_index":364,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["user/user.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["user:userprincipal",{"_index":265,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user_model",{"_index":420,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":351,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":331,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule",{"_index":45,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"classes/UserPrincipal.html":{},"interfaces/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":262,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userprincipal",{"_index":155,"title":{"classes/UserPrincipal.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticatedRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UserPrincipal.html":{},"coverage.html":{}}}],["userprofile",{"_index":369,"title":{"interfaces/UserProfile.html":{}},"body":{"controllers/UserController.html":{},"interfaces/UserProfile.html":{},"coverage.html":{}}}],["users",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userschema",{"_index":332,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods.comparepassword",{"_index":349,"title":{},"body":{"interfaces/User.html":{}}}],["userschema.pre('save",{"_index":344,"title":{},"body":{"interfaces/User.html":{}}}],["userservice",{"_index":152,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":231,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":258,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":275,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":546,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":499,"title":{},"body":{"index.html":{}}}],["website",{"_index":529,"title":{},"body":{"index.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":519,"title":{},"body":{"index.html":{}}}],["z0",{"_index":298,"title":{},"body":{"classes/RegisterDto.html":{}}}],["z])(?=.*[a",{"_index":306,"title":{},"body":{"classes/RegisterDto.html":{}}}],["z])[0",{"_index":307,"title":{},"body":{"classes/RegisterDto.html":{}}}],["z]{8,20",{"_index":310,"title":{},"body":{"classes/RegisterDto.html":{}}}],["za",{"_index":309,"title":{},"body":{"classes/RegisterDto.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/access-token.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/access-token.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccessToken{\n    accessToken: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {MongooseModule} from \"@nestjs/mongoose\";\nimport {AuthModule} from './auth/auth.module';\nimport {UserModule} from './user/user.module';\nimport {DatabaseModule} from './database/database.module';\nimport {ConfigModule} from \"@nestjs/config\";\n\n@Module({\n    imports: [\n        MongooseModule.forRoot('mongodb://localhost/nestjs-test'),\n        AuthModule,\n        UserModule,\n        DatabaseModule,\n        ConfigModule.forRoot({\n            ignoreEnvFile: true\n        })\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                testJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(req: any, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testJwt\n                        \n                    \n                \n            \n            \n                \ntestJwt(req: any, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/testJwt')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Body, Controller, HttpStatus, Post, Req, Res, UseGuards} from '@nestjs/common';\nimport {AuthService} from \"./auth.service\";\nimport {LocalAuthGuard} from \"./guard/local-auth.guard\";\nimport {Response} from \"express\";\nimport {from, map, Observable, of} from \"rxjs\";\nimport {JwtAuthGuard} from \"./guard/jwt-auth.guard\";\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {\n    }\n\n    @UseGuards(LocalAuthGuard)\n    @Post('/login')\n    login(@Req() req: any, @Res() res: Response): Observable {\n        return this.authService.login(req.user).pipe(\n            map((token) => {\n                return res\n                    .header('Authorization', 'Bearer ' + token.accessToken)\n                    .json(token)\n                    .send();\n            })\n        );\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Post('/testJwt')\n    testJwt(@Req() req: any, @Res() res: Response): Observable {\n        return of(res.status(HttpStatus.OK).send(req.user));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AuthController} from './auth.controller';\nimport {AuthService} from './auth.service';\nimport {LocalStrategy} from \"./strategy/local.strategy\";\nimport {JwtModule, JwtModuleOptions} from \"@nestjs/jwt\";\nimport {DatabaseModule} from \"../database/database.module\";\nimport {UserModule} from \"../user/user.module\";\nimport {ConfigModule, ConfigType} from \"@nestjs/config\";\nimport jwtConfig from \"../config/jwtConfig.config\";\nimport {JwtStrategy} from \"./strategy/jwt.strategy\";\n\n@Module({\n    imports: [\n        ConfigModule.forFeature(jwtConfig),\n        JwtModule.registerAsync({\n            imports: [\n                ConfigModule.forFeature(jwtConfig),\n            ],\n            useFactory: (config: ConfigType) => {\n                return {\n                    secret: config.secretKey,\n                    signOptions: {\n                        expiresIn: config.expiresIn,\n                    }\n                } as JwtModuleOptions;\n            },\n            inject: [\n                jwtConfig.KEY\n            ]\n        }),\n        DatabaseModule,\n        UserModule\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, LocalStrategy, JwtStrategy],\n    exports: [AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: UserPrincipal)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserPrincipal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateUser\n                        \n                    \n                \n            \n            \n                \nvalidateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable, UnauthorizedException} from '@nestjs/common';\nimport {UserPrincipal} from \"./interface/user-principal\";\nimport {from, map, mergeMap, Observable, of} from \"rxjs\";\nimport {JwtService} from \"@nestjs/jwt\";\nimport {JwtPayload} from \"./interface/jwt-payload.interface\";\nimport {UserService} from \"../user/user.service\";\nimport {AccessToken} from \"./interface/access-token.interface\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private jwtService: JwtService,\n        private userService: UserService\n    ) {\n    }\n\n    validateUser(username: string, password: string): Observable {\n        return this.userService.findUserByName(username).pipe(\n            mergeMap(user => {\n                if (!user) {\n                    throw  new UnauthorizedException('Username not match');\n                } else {\n                    return user.comparePassword(password).pipe(\n                        map(m => {\n                            if (m) {\n                                return {\n                                    username: user.username,\n                                    email: user.email,\n                                    firstname: user.firstname,\n                                    lastname: user.lastname\n                                } as UserPrincipal;\n                            } else {\n                                throw new UnauthorizedException('Password not match');\n                            }\n                        })\n                    );\n                }\n            })\n        );\n\n    }\n\n    login(user: UserPrincipal): Observable {\n        const payload: JwtPayload = {...user};\n        return from(this.jwtService.signAsync(payload)).pipe(\n            map((access_token) => {\n                return {accessToken: access_token} as AccessToken;\n            })\n        );\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticatedRequest.html":{"url":"interfaces/AuthenticatedRequest.html","title":"interface - AuthenticatedRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticatedRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authenticated-request.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserPrincipal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserPrincipal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserPrincipal} from \"./user-principal\";\n\nexport interface AuthenticatedRequest{\n    user: UserPrincipal\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {ConfigModule} from \"@nestjs/config\";\nimport mongodbConfig from '../config/mongodb.config';\nimport {dbProviders} from \"./database.provider\";\n\n@Module({\n    imports: [\n        ConfigModule.forFeature(mongodbConfig)\n    ],\n    providers: [\n        ...dbProviders\n    ],\n    exports: [\n        ...dbProviders\n    ]\n})\nexport class DatabaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guard/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guard/jwt-auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {CanActivate, ExecutionContext, Injectable, UnauthorizedException} from '@nestjs/common';\nimport {Observable} from 'rxjs';\nimport {AuthGuard} from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    canActivate(\n        context: ExecutionContext,\n    ): boolean | Promise | Observable {\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user) {\n        if (!user || err) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtPayload.html":{"url":"classes/JwtPayload.html","title":"class - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/jwt-payload.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/jwt-payload.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/jwt-payload.interface.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/jwt-payload.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/jwt-payload.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JwtPayload{\n    username: string;\n    email: string;\n    firstname: string;\n    lastname: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserPrincipal\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from \"@nestjs/common\";\nimport {PassportStrategy} from \"@nestjs/passport\";\nimport {ExtractJwt, Strategy} from \"passport-jwt\";\nimport jwtConfig from \"../../config/jwtConfig.config\";\nimport {ConfigType} from \"@nestjs/config\";\nimport {UserPrincipal} from \"../interface/user-principal\";\nimport {JwtPayload} from \"../interface/jwt-payload.interface\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(@Inject(jwtConfig.KEY) config: ConfigType) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: true,\n            secretOrKey: config.secretKey\n        });\n    }\n\n    validate(payload: JwtPayload): UserPrincipal {\n        return {\n            username: payload.username,\n            email: payload.email,\n            firstname: payload.firstname,\n            lastname: payload.lastname\n        } as UserPrincipal;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {Injectable} from \"@nestjs/common\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local'){}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {PassportStrategy} from \"@nestjs/passport\";\nimport {Strategy} from \"passport-local\";\nimport {AuthService} from \"../auth.service\";\nimport {Injectable, UnauthorizedException} from \"@nestjs/common\";\nimport {lastValueFrom} from \"rxjs\";\nimport {UserPrincipal} from \"../interface/user-principal\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({\n            usernameField: 'username',\n            passwordField: 'password'\n        });\n    }\n\n    async validate(username: string, password: string): Promise {\n        // console.log(this.authService.validateUser(username,password))\n        const user:UserPrincipal = await lastValueFrom(this.authService.validateUser(username, password));\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, MinLength} from \"class-validator\";\n\nexport class LoginDto{\n    @MinLength(4)\n    username: string;\n\n    @MinLength(4)\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                    Optional\n                                firstname\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lastname\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/register.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/register.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/register.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(8, {message: ' The min length of password is 8 '})@MaxLength(20, {message: ' The password can't accept more than 20 characters '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/register.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from \"class-validator\";\n\nexport class RegisterDto {\n    @IsNotEmpty()\n    readonly username: string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    //@Matches(/^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i)\n    readonly email: string;\n\n    @IsNotEmpty()\n    @MinLength(8, { message: \" The min length of password is 8 \" })\n    @MaxLength(20, { message: \" The password can't accept more than 20 characters \" })\n    // @Matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,20}$/,\n    //     { message: \" A password at least contains one numeric digit, one supercase char and one lowercase char\" }\n    // )\n    readonly password: string;\n\n    @IsNotEmpty()\n    readonly firstname?: string;\n\n    @IsNotEmpty()\n    readonly lastname?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/model/user.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        comparePassword\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        comparePassword\n                        \n                    \n                \n            \n            \n                \ncomparePassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/database/model/user.model.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Document, Model, Schema, SchemaType, SchemaTypes} from \"mongoose\";\nimport {from, Observable} from \"rxjs\";\nimport {hash, compare} from \"bcrypt\";\n\ninterface User extends Document {\n    comparePassword(password: string): Observable;\n\n    readonly username: string;\n    readonly email: string;\n    readonly password: string;\n    readonly firstname: string;\n    readonly lastname: string;\n}\n\ntype UserModel = Model;\n\nconst UserSchema = new Schema({\n    username: SchemaTypes.String,\n    email: SchemaTypes.String,\n    password: SchemaTypes.String,\n    firstname: SchemaTypes.String,\n    lastname: SchemaTypes.String\n}, {\n    timestamps: true\n});\n\nasync function preSaveHook(next) {\n    // Only run this function if password was modified\n    if (!this.isModified('password')) return next();\n\n    // Hash the password\n    const password = await hash(this.password, 12);\n    this.set('password', password);\n\n    next();\n}\n\nUserSchema.pre('save', preSaveHook);\n\nfunction comparePasswordMethod(password: string): Observable {\n    return from(compare(password, this.password));\n}\n\nUserSchema.methods.comparePassword = comparePasswordMethod;\n\nexport {\n    User,\n    UserSchema,\n    UserModel,\n    comparePasswordMethod\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                profile\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(req: AuthenticatedRequest, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/profile')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                AuthenticatedRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(data: RegisterDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    ConflictException,\n    Controller,\n    HttpStatus,\n    NotFoundException,\n    Post,\n    Req,\n    Res,\n    UseGuards\n} from '@nestjs/common';\nimport {UserService} from \"./user.service\";\nimport {RegisterDto} from \"./register.dto\";\nimport {Response} from \"express\";\nimport {map, mergeMap, Observable} from \"rxjs\";\nimport {JwtAuthGuard} from \"../auth/guard/jwt-auth.guard\";\nimport {AuthenticatedRequest} from \"../auth/interface/authenticated-request.interface\";\nimport {UserProfile} from \"./interface/user-profile.interface\";\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {\n    }\n\n    @Post('/register')\n    register(@Body() data: RegisterDto, @Res() res: Response) {\n        const {username, email} = data;\n        return this.userService.existByUsername(username).pipe(\n            mergeMap(isUsernameExist => {\n                    if (isUsernameExist) {\n                        throw new ConflictException(`Username: ${username} is exist!`);\n                    } else {\n                        return this.userService.existByMail(email).pipe(\n                            mergeMap((isEmailExist) => {\n                                if (isEmailExist) {\n                                    throw  new ConflictException(`Email: ${email} is exist!`);\n                                } else {\n                                    return this.userService.register(data)\n                                        .pipe(\n                                            map(user => res\n                                                .status(HttpStatus.OK)\n                                                .send({\n                                                    username: username,\n                                                    email: email\n                                                })\n                                            )\n                                        );\n                                }\n                            })\n                        );\n                    }\n\n                }\n            )\n        );\n    }\n\n    @Post('/profile')\n    @UseGuards(JwtAuthGuard)\n    profile(@Req() req: AuthenticatedRequest, @Res() res: Response): Observable {\n        return this.userService.findUserByName(req.user.username).pipe(\n            map(user => {\n                if (user) {\n                    let userProfile: UserProfile = {\n                        username: user.username,\n                        email: user.email,\n                        firstname: user.firstname,\n                        lastname: user.lastname\n                    };\n                    return res\n                        .status(HttpStatus.OK)\n                        .send(userProfile);\n                } else {\n                    throw new NotFoundException('User not found!');\n                }\n            })\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {DatabaseModule} from \"../database/database.module\";\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n    imports: [\n        DatabaseModule\n    ],\n    controllers: [UserController],\n    providers: [UserService],\n    exports:[UserService]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPrincipal.html":{"url":"classes/UserPrincipal.html","title":"class - UserPrincipal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPrincipal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/user-principal.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/user-principal.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/user-principal.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/user-principal.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/user-principal.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserPrincipal{\n    username: string;\n    email: string;\n    firstname: string;\n    lastname: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserProfile.html":{"url":"interfaces/UserProfile.html","title":"interface - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/user-profile.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserProfile{\n    username: string;\n    email: string;\n    firstname: string;\n    lastname: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                existByMail\n                            \n                            \n                                existByUsername\n                            \n                            \n                                findUserByName\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: UserModel)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        UserModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        existByMail\n                        \n                    \n                \n            \n            \n                \nexistByMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existByUsername\n                        \n                    \n                \n            \n            \n                \nexistByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByName\n                        \n                    \n                \n            \n            \n                \nfindUserByName(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(data: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@nestjs/common';\nimport {USER_MODEL} from \"../database/database.constants\";\nimport {User, UserModel} from \"../database/model/user.model\";\nimport {from, Observable, of} from \"rxjs\";\nimport {RegisterDto} from \"./register.dto\";\n\n@Injectable()\nexport class UserService {\n    constructor(@Inject(USER_MODEL) private userModel: UserModel) {\n    }\n\n    findUserByName(username: string): Observable {\n        return from(this.userModel.findOne({username}).exec());\n    }\n\n    register(data: RegisterDto): Observable {\n        return from(this.userModel.create({...data}));\n    }\n\n    existByUsername(username: string): Observable {\n        return from(this.userModel.exists({username}));\n    }\n\n    existByMail(email: string): Observable {\n        return from(this.userModel.exists({email}));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interface/access-token.interface.ts\n            \n            class\n            AccessToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/authenticated-request.interface.ts\n            \n            interface\n            AuthenticatedRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/jwt-payload.interface.ts\n            \n            class\n            JwtPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/interface/user-principal.ts\n            \n            class\n            UserPrincipal\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/database.constants.ts\n            \n            variable\n            DB_CONNECTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.constants.ts\n            \n            variable\n            USER_MODEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.provider.ts\n            \n            variable\n            dbProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/model/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/database/model/user.model.ts\n            \n            function\n            comparePasswordMethod\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/model/user.model.ts\n            \n            function\n            preSaveHook\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/model/user.model.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interface/user-profile.interface.ts\n            \n            interface\n            UserProfile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.1\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.0.9\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mongoose : ^5.13.7\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.1.6\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            comparePasswordMethod   (src/.../user.model.ts)\n                        \n                        \n                            preSaveHook   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/database/model/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswordMethod\n                        \n                    \n                \n            \n            \n                \ncomparePasswordMethod(password)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preSaveHook\n                        \n                    \n                \n            \n            \n                \npreSaveHook(next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserModel   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/model/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    UserModel\n                \n            \n            \n                \n                            Model\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DB_CONNECTION   (src/.../database.constants.ts)\n                        \n                        \n                            dbProviders   (src/.../database.provider.ts)\n                        \n                        \n                            USER_MODEL   (src/.../database.constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DB_CONNECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DATABASE_CONNECTION'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_MODEL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_MODEL'\n                    \n                \n\n\n        \n    \n\n    src/database/database.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dbProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        provide: DB_CONNECTION,\n        useFactory: (dbConfig: ConfigType): Connection => {\n            return createConnection(dbConfig.uri, {\n                useNewUrlParser: true,\n                useUnifiedTopology: true\n            });\n        },\n        inject: [mongodbConfig.KEY]\n    },\n    {\n        provide: USER_MODEL,\n        useFactory: (conn: Connection) => {\n            return conn.model('User', UserSchema, 'users');\n        },\n        inject: [DB_CONNECTION]\n    }\n]\n                    \n                \n\n\n        \n    \n\n    src/database/model/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n    username: SchemaTypes.String,\n    email: SchemaTypes.String,\n    password: SchemaTypes.String,\n    firstname: SchemaTypes.String,\n    lastname: SchemaTypes.String\n}, {\n    timestamps: true\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
